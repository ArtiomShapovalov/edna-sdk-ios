#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef THREADS_SWIFT_H
#define THREADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Threads",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC7Threads12HttpSettings")
@interface HttpSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций загрузки
@property (nonatomic) NSTimeInterval downloadTimeoutSec;
/// таймаут операций выгрузки
@property (nonatomic) NSTimeInterval uploadTimeoutSec;
@end

@class NSString;

SWIFT_CLASS("_TtC7Threads12Localization")
@interface Localization : NSObject
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7Threads18LocalizationConfig")
@interface LocalizationConfig : NSObject
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle tableName:(NSString * _Nonnull)tableName OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) NSBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSString * _Nonnull tableName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end








@interface NSNumber (SWIFT_EXTENSION(Threads))
+ (NSTimeInterval)minutes:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)hours:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)days:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)weeks:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)months:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)years:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC7Threads12PushUserInfo")
@interface PushUserInfo : NSObject
- (nullable instancetype)initFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull alert;
@property (nonatomic, readonly) NSInteger skillId;
@property (nonatomic, readonly, copy) NSString * _Nonnull expiredAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull chlSentAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaign;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, copy) NSString * _Nonnull senderName;
@property (nonatomic, readonly, copy) NSString * _Nullable chatMessageId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads10QuickReply")
@interface QuickReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSLayoutConstraint;
@class UIButton;
@class UINib;
@protocol QuickReplyCellDelegate;
@class UITraitCollection;
@class NSCoder;

SWIFT_CLASS("_TtC7Threads14QuickReplyCell")
@interface QuickReplyCell : UICollectionViewCell
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) QuickReplyCell * _Nonnull sizingCell;)
+ (QuickReplyCell * _Nonnull)sizingCell SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellWidth;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified actionButton;
+ (NSString * _Nonnull)cellIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (UINib * _Nonnull)nib SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (void)configureWithQuickReply:(QuickReply * _Nonnull)quickReply delegate:(id <QuickReplyCellDelegate> _Nonnull)delegate;
- (void)setWidth:(CGFloat)width;
- (void)prepareForReuse;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


///
SWIFT_PROTOCOL("_TtP7Threads22QuickReplyCellDelegate_")
@protocol QuickReplyCellDelegate
/// \param quickReply 
///
- (void)didSelectQuickReply:(QuickReply * _Nonnull)quickReply;
@end


SWIFT_CLASS("_TtC7Threads14SocketSettings")
@interface SocketSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// интервал повторной попытки отправки сообщения
@property (nonatomic) NSTimeInterval resendIntervalSec;
/// интервал запросов поддержания активной соединения
@property (nonatomic) NSTimeInterval resendPingIntervalSec;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций чтения для нового соединения
@property (nonatomic) NSTimeInterval readTimeoutSec;
/// таймаут операций записи для нового соединения
@property (nonatomic) NSTimeInterval writeTimeoutSec;
@end

@class UIColor;
@class UIFont;
@class UIImage;
enum THRQuickReplyPresentationMode : NSUInteger;
@class THRCert;

SWIFT_CLASS("_TtC7Threads13THRAttributes")
@interface THRAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL canShowDebugScreen;
@property (nonatomic, strong) LocalizationConfig * _Nullable localizationConfig;
/// Works properly for non view controller based status bar appearance
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull refreshColor;
@property (nonatomic) BOOL navigationBarVisible;
@property (nonatomic) BOOL navigationBarCustomizeTitle;
@property (nonatomic, copy) NSString * _Nullable navigationBarTitle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarSubtitleColor;
@property (nonatomic) BOOL navigationBarSubtitleShowOrgUnit;
@property (nonatomic) BOOL navigationBarSubtitleVisible;
@property (nonatomic) BOOL navigationBarLarge;
@property (nonatomic) BOOL navigationBarKeyboardControlVisible;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardShowImage;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardHideImage;
@property (nonatomic) BOOL launchViewEnable;
@property (nonatomic, strong) UIColor * _Nonnull launchActivityViewColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewInnerBoxBackgroundColor;
@property (nonatomic) CGFloat launchViewInnerBoxCornerRadius;
@property (nonatomic) CGSize launchViewInnerBoxSize;
@property (nonatomic, strong) UIColor * _Nonnull launchViewTextColor;
@property (nonatomic, strong) UIFont * _Nonnull launchViewTextFont;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable placeholderImage;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull placeholderSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull placeholderSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarbackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarTintColor;
@property (nonatomic, strong) UIImage * _Nullable attachButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonHighlightColor;
@property (nonatomic) BOOL showAttachButton;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonHighlightColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonDisabledColor;
@property (nonatomic, strong) UIFont * _Nonnull sendButtonFont;
@property (nonatomic, strong) UIImage * _Nullable sendButtonImage;
@property (nonatomic, strong) UIFont * _Nonnull myMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageColor;
@property (nonatomic) BOOL toolbarInputHasBorder;
@property (nonatomic) CGFloat toolbarInputCornerRadius;
@property (nonatomic) CGFloat toolbarInputMinimumHeight;
@property (nonatomic) CGFloat toolbarInputMaximumHeight;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputCursorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputBackgroundColor;
@property (nonatomic) BOOL showWaitingForSpecialistProgress;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistSpinnerColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBgColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBorderColor;
@property (nonatomic) CGFloat waitingSpecialistBorderWidth;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull failedMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull messageHeaderFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteFilesizeFont;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleFilledMaskImage;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleStrokedMaskImage;
@property (nonatomic) UIEdgeInsets messageBubbleFilledMaskInsets;
@property (nonatomic) UIEdgeInsets messageBubbleStrokedMaskInsets;
@property (nonatomic) CGFloat messageContainerRightOffset;
@property (nonatomic) CGFloat messageContainerLeftOffset;
/// Right value sets margin to the avatar image
/// Left value sets margin on the side opposite the avatar image
@property (nonatomic) UIEdgeInsets messageBubbleTextViewFrameInsets;
@property (nonatomic) UIEdgeInsets messageBubbleTextViewTextContainerInsets;
@property (nonatomic) CGFloat messageBubbleOppositeMargin;
@property (nonatomic, strong) UIColor * _Nonnull emptyImageColor;
@property (nonatomic, strong) UIColor * _Nonnull timeAndStatusBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull typingTextFont;
@property (nonatomic, strong) UIColor * _Nonnull typingTextColor;
@property (nonatomic, copy) NSString * _Nullable typingText;
@property (nonatomic, strong) UIColor * _Nullable typingIndicatorEllipsisColor;
@property (nonatomic, strong) UIImage * _Nullable scheduleIcon;
@property (nonatomic, strong) UIColor * _Nonnull scheduleAlertColor;
@property (nonatomic, strong) UIFont * _Nonnull scheduleAlertFont;
@property (nonatomic, strong) UIColor * _Nonnull scheduleIconBackgroundColor;
@property (nonatomic, strong) UIImage * _Nullable scrollToBottomImage;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeColor;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeTextColor;
@property (nonatomic) BOOL incomingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingTimeColor;
@property (nonatomic) BOOL showIncomingAvatar;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingMediaTimeColor;
@property (nonatomic) CGFloat commonMessageAvatarSize;
@property (nonatomic) CGFloat systemMessageAvatarSize;
@property (nonatomic) BOOL failedBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull failedBubbleColor;
@property (nonatomic) BOOL outgoingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingReadStatusColor;
@property (nonatomic, strong) UIImage * _Nullable outgoingPendingStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingDeliveredStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingReadStatusImage;
@property (nonatomic) BOOL showOutgoingAvatar;
@property (nonatomic, strong) UIImage * _Nullable avatarPlaceholderImage;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaReadStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull searchScopeBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull searchScopeBarFont;
@property (nonatomic, strong) UIFont * _Nonnull searchBarTextFont;
@property (nonatomic) BOOL searchIconDisabled;
@property (nonatomic, strong) UIImage * _Nullable clearSearchIcon;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull findedMessageHeaderTextFont;
@property (nonatomic, strong) UIColor * _Nonnull findMoreMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull findMoreMessageTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageAuthorTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageDateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageFileTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageMatchTextColor;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageAuthorTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageMatchTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageFileTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageDateTextFont;
@property (nonatomic) BOOL photoPickerSelfieEnabled;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerToolbarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerToolbarButtonFont;
@property (nonatomic, strong) UIImage * _Nullable photoPickerCheckmarkIcon;
@property (nonatomic, strong) UIImage * _Nullable photoPickerEmptyCheckmarkIcon;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerSheetTextFont;
@property (nonatomic, strong) UIColor * _Nullable fileViewerTitleColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull fileViewerBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull fileViewerTitleFont;
@property (nonatomic) BOOL canShowSpecialistInfo;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelOnStarColor;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelUnderStarColor;
@property (nonatomic, strong) UIColor * _Nonnull surveyTextColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyTextFont;
@property (nonatomic, strong) UIColor * _Nonnull surveyCompletionColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyCompletionFont;
@property (nonatomic) NSInteger surveyCompletionDelay;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingEmty;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingFull;
@property (nonatomic, strong) UIImage * _Nullable iconLikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconLikeFull;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeFull;
@property (nonatomic) enum THRQuickReplyPresentationMode quickReplyPresentationMode;
/// < Шрифт для кнопок быстрых ответов
@property (nonatomic, strong) UIFont * _Nonnull quickReplyFont;
/// < Радиус закругления кнопок быстрых ответов
@property (nonatomic, strong) NSNumber * _Nonnull quickReplyBorderCornerRadius;
/// < Цвет границы кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBorderColor;
/// < Цвет кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColor;
/// < Цвет текста на кнопках быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColor;
/// <  Цвет подсветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColorHighlighted;
/// < Цвет подстветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColorHighLighted;
/// < Высота кнопки быстрого ответа (в режиме embed)
@property (nonatomic) CGFloat quickReplyButtonHeight;
/// < Толщина границы кнопки быстрого ответа
@property (nonatomic) CGFloat quickReplyBorderWidth;
@property (nonatomic) BOOL voiceRecordingAllowed;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageRecordButtonImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageSendButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull voiceMessageRecordSendButtonColor;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePlayImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePauseImage;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageProgressColor;
@property (nonatomic) BOOL showCloseButton;
@property (nonatomic, strong) UIColor * _Nullable closeButtonColor;
@property (nonatomic, strong) UIImage * _Nullable closeButtonImage;
@property (nonatomic) BOOL newChatCenterApi;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHTTPHeadersForDataStore;
@property (nonatomic, strong) NSNumber * _Nonnull historyLoadingCount;
/// pragma mark - Access call didReceiveResponse in delegate
@property (nonatomic) BOOL callReceiveResponseEnabled;
@property (nonatomic) BOOL clearChatHistoryIfSocketReconnect;
@property (nonatomic) BOOL allowUntrustedSSLCertificate;
@property (nonatomic, copy) NSArray<THRCert *> * _Nonnull trustedCertificates;
@property (nonatomic) NSUInteger photoPickerMaxImagesCount;
+ (THRAttributes * _Nonnull)defaultAttributes SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURL;

SWIFT_CLASS_NAMED("THRCert")
@interface THRCert : NSObject
/// Initialization certificate if it is in any place, main bundle or other bundles
/// \param url URL for certificate’s file
///
- (nonnull instancetype)initWithContentsOf:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
/// Initialization certificate if it is in main bundle
/// \param fileName String with name of file
///
- (nonnull instancetype)initWithContentsOfFile:(NSString * _Nonnull)fileName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads13THRClientInfo")
@interface THRClientInfo : NSObject
- (nonnull instancetype)initWithClientId:(NSString * _Nonnull)clientId OBJC_DESIGNATED_INITIALIZER;
/// Client configuration
/// @param id Unique client identifier, required parameter. For example, you can use the user’s phone number.
/// @param name Name of user
/// @param data custom data, json key-value pairs string
/// @param appMarker hreads support connecting multiple apps to a single server. Configure the appMarker identifier on the server and in app. As appMarker can be any unique string. appMarker should be the same for corresponding Android and iOS applications.
/// @param signature The clientId authorization signature, the signature should be generated on your server based on the clientId using the RSA private key, then encrypted in Base64. Under the general scheme of work with the signature, see the documentation for Threads-API.
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable appMarker;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable authToken;
@property (nonatomic, copy) NSString * _Nullable authSchema;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum THRSysColor : NSInteger;

SWIFT_CLASS("_TtC7Threads8THRColor")
@interface THRColor : NSObject
+ (UIColor * _Nonnull)colorBy:(NSString * _Nonnull)name colorType:(enum THRSysColor)colorType SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorBy:(NSString * _Nonnull)name defColor:(UIColor * _Nonnull)defColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorBy:(enum THRSysColor)sysColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads11THRControls")
@interface THRControls : NSObject
@property (nonatomic, strong) UIButton * _Nullable sendButton;
@property (nonatomic, strong) UIButton * _Nullable attachButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>JSQMessageAvatarImageDataSource</code> protocol defines the common interface through which
/// a <code>JSQMessagesViewController</code> and <code>JSQMessagesCollectionView</code> interact with avatar image model objects.
/// It declares the required and optional methods that a class must implement so that instances
/// of that class can be display properly within a <code>JSQMessagesCollectionViewCell</code>.
/// A concrete class that conforms to this protocol is provided in the library. See <code>JSQMessagesAvatarImage</code>.
/// seealso:
/// JSQMessagesAvatarImage.
SWIFT_PROTOCOL("_TtP7Threads34THRJSQMessageAvatarImageDataSource_")
@protocol THRJSQMessageAvatarImageDataSource <NSObject>
/// remark:
/// You may return <code>nil</code> from this method while the image is being downloaded.
///
/// returns:
/// The avatar image for a regular display state.
@property (nonatomic, strong) UIImage * _Nullable avatarImage;
/// remark:
/// You may return <code>nil</code> from this method if this does not apply.
///
/// returns:
/// The avatar image for a highlighted display state.
@property (nonatomic, strong) UIImage * _Nullable avatarHighlightedImage;
/// remark:
/// If you do not need support for a placeholder image, that is, your images
/// are stored locally on the device, then you may simply return the same value as avatarImage here.
/// @warning You must not return <code>nil</code> from this method.
///
/// returns:
/// A placeholder avatar image to be displayed if avatarImage is not yet available, or <code>nil</code>.
/// For example, if avatarImage needs to be downloaded, this placeholder image
/// will be used until avatarImage is not <code>nil</code>.
@property (nonatomic, readonly, strong) UIImage * _Nonnull avatarPlaceholderImage;
@end


SWIFT_CLASS("_TtC7Threads14THRMessageInfo")
@interface THRMessageInfo : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nullable)text senderName:(NSString * _Nonnull)senderName hasAttachment:(BOOL)hasAttachment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, THRMessageRecieveState, open) {
  THRMessageRecieveStateAccepted = 0,
  THRMessageRecieveStateNotAccepted = 1,
};

typedef SWIFT_ENUM_NAMED(NSInteger, THRMessageRecieveStateOld, "THRMessageRecieveStateOld", open) {
  THRMessageRecieveStateOldAccepted = 0,
  THRMessageRecieveStateOldNotAccepted = 1,
};

/// Режимы отображения быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyPresentationMode, open) {
/// < Показ кнопок быстрых ответов в всплывающей панели
  THRQuickReplyPresentationModeToolbar = 0,
/// < Показ кнопок быстрых ответов в потоке сообщений
  THRQuickReplyPresentationModeEmbed = 1,
};


SWIFT_CLASS("_TtC7Threads17THRRequestConfigs")
@interface THRRequestConfigs : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) SocketSettings * _Nonnull socket;
@property (nonatomic, strong) HttpSettings * _Nonnull http;
@end


SWIFT_CLASS("_TtC7Threads16THRRoutingParams")
@interface THRRoutingParams : NSObject
- (nonnull instancetype)initWithPriority:(NSInteger)priority skillId:(NSInteger)skillId expiredAt:(NSString * _Nullable)expiredAt OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, THRSysColor, open) {
  THRSysColorDarkGreen = 0,
  THRSysColorLightGreen = 1,
  THRSysColorGray = 2,
  THRSysColorLightGray = 3,
  THRSysColorMiddleGray = 4,
  THRSysColorDarkGray = 5,
  THRSysColorDarkerGray = 6,
  THRSysColorBlackTransparent50 = 7,
  THRSysColorLightCyan = 8,
  THRSysColorBlue = 9,
  THRSysColorRed = 10,
  THRSysColorOrange = 11,
  THRSysColorDarkOrange = 12,
  THRSysColorGold = 13,
  THRSysColorLabel = 14,
  THRSysColorSecondaryLabel = 15,
  THRSysColorTertiaryLabel = 16,
  THRSysColorQuaternaryLabel = 17,
  THRSysColorSystemFill = 18,
  THRSysColorSecondarySystemFill = 19,
  THRSysColorTertiarySystemFill = 20,
  THRSysColorQuaternarySystemFill = 21,
  THRSysColorPlaceholderText = 22,
  THRSysColorSystemBackground = 23,
  THRSysColorSecondarySystemBackground = 24,
  THRSysColorTertiarySystemBackground = 25,
  THRSysColorSystemGroupedBackground = 26,
  THRSysColorSecondarySystemGroupedBackground = 27,
  THRSysColorTertiarySystemGroupedBackground = 28,
  THRSysColorSeparator = 29,
  THRSysColorOpaqueSeparator = 30,
  THRSysColorLink = 31,
  THRSysColorDarkText = 32,
  THRSysColorLightText = 33,
  THRSysColorSystemBlue = 34,
  THRSysColorSystemGreen = 35,
  THRSysColorSystemIndigo = 36,
  THRSysColorSystemOrange = 37,
  THRSysColorSystemPink = 38,
  THRSysColorSystemPurple = 39,
  THRSysColorSystemRed = 40,
  THRSysColorSystemTeal = 41,
  THRSysColorSystemYellow = 42,
  THRSysColorSystemGray = 43,
  THRSysColorSystemGray2 = 44,
  THRSysColorSystemGray3 = 45,
  THRSysColorSystemGray4 = 46,
  THRSysColorSystemGray5 = 47,
  THRSysColorSystemGray6 = 48,
};

@protocol ThreadsDelegate;
@class NSData;
@class UIViewController;

SWIFT_CLASS("_TtC7Threads7Threads")
@interface Threads : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic) BOOL isClientIdEncrypted;
@property (nonatomic) BOOL isDebugLoggingEnabled;
@property (nonatomic) BOOL isSocketAdditionalDebugLoggingEnabled;
@property (nonatomic) BOOL registrationAtStartupDisable;
@property (nonatomic) BOOL isShowsNetworkActivity;
@property (nonatomic, readonly, copy) NSString * _Nullable clientId;
@property (nonatomic, readonly, copy) NSString * _Nullable clientName;
@property (nonatomic, readonly, copy) NSString * _Nullable appMarker;
@property (nonatomic, readonly, copy) NSString * _Nullable clientSignature;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthToken;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthSchema;
@property (nonatomic, readonly) BOOL isClientSet;
@property (nonatomic, readonly, copy) NSString * _Nullable data;
@property (nonatomic, readonly) NSInteger fileSizeLimit;
@property (nonatomic, readonly, strong) THRAttributes * _Nonnull attributes;
@property (nonatomic, readonly, strong) THRControls * _Nonnull controls;
@property (nonatomic, copy) NSURL * _Nullable restURL;
@property (nonatomic, copy) NSURL * _Nullable dataStoreURL;
@property (nonatomic, readonly) NSTimeInterval lastActivitySeconds;
+ (Threads * _Nonnull)threads SWIFT_WARN_UNUSED_RESULT;
- (void)configureTransportProtocolWith:(id <ThreadsDelegate> _Nullable)delegate webSocketURL:(NSURL * _Nonnull)webSocketURL providerUid:(NSString * _Nonnull)providerUid restURL:(NSURL * _Nonnull)restURL dataStoreURL:(NSURL * _Nonnull)dataStoreURL;
- (void)registerApplicationForRemoteNotificationsStandartOptionsWithAuthorizationStatusDenied:(void (^ _Nullable)(void))authorizationStatusDenied completionHandler:(void (^ _Nonnull)(NSData * _Nullable))completionHandler;
- (void)applicationDidRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)applicationDidFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)applicationDidReceiveRemoteNotification:(NSDictionary * _Nonnull)withUserInfo;
- (void)applicationDidReceiveRemoteNotification:(NSDictionary * _Nonnull)withUserInfo fetchCompletionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(enum THRMessageRecieveState))_;
- (void)updateLocationWithLatitude:(NSNumber * _Nonnull)latitude longtitude:(NSNumber * _Nonnull)longtitude;
- (void)setClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)logout;
- (void)logoutWithClientId:(NSString * _Nonnull)clientId;
- (void)handlePushNotificationUserInfo:(NSDictionary * _Nonnull)userInfo;
- (NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
- (NSUInteger)unreadMessagesCount SWIFT_WARN_UNUSED_RESULT;
- (void)clearCachedFiles;
- (BOOL)isThreadsOriginPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAppMarkerFromPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)sendMessageWithText:(NSString * _Nonnull)withText completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)registerUserWith:(THRClientInfo * _Nonnull)clientInfo messageWithText:(NSString * _Nonnull)text;
- (void)sendMessageWith:(UIImage * _Nonnull)image completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes pushUserInfo:(NSDictionary * _Nonnull)pushUserInfo completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol ThreadsPreloadView;

SWIFT_PROTOCOL("_TtP7Threads15ThreadsDelegate_")
@protocol ThreadsDelegate
- (void)threads:(Threads * _Nonnull)threads didReceiveError:(NSError * _Nonnull)error;
- (void)threads:(Threads * _Nonnull)threads unreadMessagesCount:(NSUInteger)unreadMessagesCount;
- (void)threads:(Threads * _Nonnull)threads didChangeDeviceAddress:(NSString * _Nonnull)deviceAddress;
@optional
- (BOOL)threads:(Threads * _Nonnull)threads allowOpenUrl:(NSURL * _Nonnull)allowOpenUrl SWIFT_WARN_UNUSED_RESULT;
- (id <ThreadsPreloadView> _Null_unspecified)customPreloadView SWIFT_WARN_UNUSED_RESULT;
@end

@class UIView;

SWIFT_PROTOCOL("_TtP7Threads18ThreadsPreloadView_")
@protocol ThreadsPreloadView
- (void)startAnimation;
- (void)stopAnimation;
- (UIView * _Null_unspecified)getView SWIFT_WARN_UNUSED_RESULT;
@end









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef THREADS_SWIFT_H
#define THREADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Threads",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC7Threads12HttpSettings")
@interface HttpSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций загрузки
@property (nonatomic) NSTimeInterval downloadTimeoutSec;
/// таймаут операций выгрузки
@property (nonatomic) NSTimeInterval uploadTimeoutSec;
@end

@class NSString;

SWIFT_CLASS("_TtC7Threads12Localization")
@interface Localization : NSObject
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7Threads18LocalizationConfig")
@interface LocalizationConfig : NSObject
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle tableName:(NSString * _Nonnull)tableName OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) NSBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSString * _Nonnull tableName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end








@interface NSNumber (SWIFT_EXTENSION(Threads))
+ (NSTimeInterval)minutes:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)hours:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)days:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)weeks:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)months:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)years:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC7Threads12PushUserInfo")
@interface PushUserInfo : NSObject
- (nullable instancetype)initFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull alert;
@property (nonatomic, readonly) NSInteger skillId;
@property (nonatomic, readonly, copy) NSString * _Nonnull expiredAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull chlSentAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaign;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, copy) NSString * _Nonnull senderName;
@property (nonatomic, readonly, copy) NSString * _Nullable chatMessageId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads10QuickReply")
@interface QuickReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSLayoutConstraint;
@class UIButton;
@class UINib;
@protocol QuickReplyCellDelegate;
@class UITraitCollection;
@class NSCoder;

SWIFT_CLASS("_TtC7Threads14QuickReplyCell")
@interface QuickReplyCell : UICollectionViewCell
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) QuickReplyCell * _Nonnull sizingCell;)
+ (QuickReplyCell * _Nonnull)sizingCell SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) IBOutlet NSLayoutConstraint * _Null_unspecified cellWidth;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified actionButton;
+ (NSString * _Nonnull)cellIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (UINib * _Nonnull)nib SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (void)configureWithQuickReply:(QuickReply * _Nonnull)quickReply delegate:(id <QuickReplyCellDelegate> _Nonnull)delegate;
- (void)setWidth:(CGFloat)width;
- (void)prepareForReuse;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


///
SWIFT_PROTOCOL("_TtP7Threads22QuickReplyCellDelegate_")
@protocol QuickReplyCellDelegate
/// \param quickReply 
///
- (void)didSelectQuickReply:(QuickReply * _Nonnull)quickReply;
@end


SWIFT_CLASS("_TtC7Threads14SocketSettings")
@interface SocketSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// интервал повторной попытки отправки сообщения
@property (nonatomic) NSTimeInterval resendIntervalSec;
/// интервал запросов поддержания активной соединения
@property (nonatomic) NSTimeInterval resendPingIntervalSec;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций чтения для нового соединения
@property (nonatomic) NSTimeInterval readTimeoutSec;
/// таймаут операций записи для нового соединения
@property (nonatomic) NSTimeInterval writeTimeoutSec;
@end

@class UIColor;
@class UIFont;
@class UIImage;
enum THRQuickReplyPresentationMode : NSUInteger;
@class THRCert;

SWIFT_CLASS("_TtC7Threads13THRAttributes")
@interface THRAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL canShowDebugScreen;
@property (nonatomic, strong) LocalizationConfig * _Nullable localizationConfig;
/// Works properly for non view controller based status bar appearance
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull refreshColor;
@property (nonatomic) BOOL navigationBarVisible;
@property (nonatomic) BOOL navigationBarCustomizeTitle;
@property (nonatomic, copy) NSString * _Nullable navigationBarTitle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarSubtitleColor;
@property (nonatomic) BOOL navigationBarSubtitleShowOrgUnit;
@property (nonatomic) BOOL navigationBarSubtitleVisible;
@property (nonatomic) BOOL navigationBarLarge;
@property (nonatomic) BOOL navigationBarKeyboardControlVisible;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardShowImage;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardHideImage;
@property (nonatomic) BOOL launchViewEnable;
@property (nonatomic, strong) UIColor * _Nonnull launchActivityViewColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewInnerBoxBackgroundColor;
@property (nonatomic) CGFloat launchViewInnerBoxCornerRadius;
@property (nonatomic) CGSize launchViewInnerBoxSize;
@property (nonatomic, strong) UIColor * _Nonnull launchViewTextColor;
@property (nonatomic, strong) UIFont * _Nonnull launchViewTextFont;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable placeholderImage;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull placeholderSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull placeholderSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarbackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarTintColor;
@property (nonatomic, strong) UIImage * _Nullable attachButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonHighlightColor;
@property (nonatomic) BOOL showAttachButton;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonHighlightColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonDisabledColor;
@property (nonatomic, strong) UIFont * _Nonnull sendButtonFont;
@property (nonatomic, strong) UIImage * _Nullable sendButtonImage;
@property (nonatomic, strong) UIFont * _Nonnull myMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageColor;
@property (nonatomic) BOOL toolbarInputHasBorder;
@property (nonatomic) CGFloat toolbarInputCornerRadius;
@property (nonatomic) CGFloat toolbarInputMinimumHeight;
@property (nonatomic) CGFloat toolbarInputMaximumHeight;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputCursorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputBackgroundColor;
@property (nonatomic) BOOL showWaitingForSpecialistProgress;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistSpinnerColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBgColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBorderColor;
@property (nonatomic) CGFloat waitingSpecialistBorderWidth;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull failedMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull messageHeaderFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteFilesizeFont;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleFilledMaskImage;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleStrokedMaskImage;
@property (nonatomic) UIEdgeInsets messageBubbleFilledMaskInsets;
@property (nonatomic) UIEdgeInsets messageBubbleStrokedMaskInsets;
@property (nonatomic) CGFloat messageContainerRightOffset;
@property (nonatomic) CGFloat messageContainerLeftOffset;
/// Right value sets margin to the avatar image
/// Left value sets margin on the side opposite the avatar image
@property (nonatomic) UIEdgeInsets messageBubbleTextViewFrameInsets;
@property (nonatomic) UIEdgeInsets messageBubbleTextViewTextContainerInsets;
@property (nonatomic) CGFloat messageBubbleOppositeMargin;
@property (nonatomic, strong) UIColor * _Nonnull emptyImageColor;
@property (nonatomic, strong) UIColor * _Nonnull timeAndStatusBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull typingTextFont;
@property (nonatomic, strong) UIColor * _Nonnull typingTextColor;
@property (nonatomic, copy) NSString * _Nullable typingText;
@property (nonatomic, strong) UIColor * _Nullable typingIndicatorEllipsisColor;
@property (nonatomic, strong) UIImage * _Nullable scheduleIcon;
@property (nonatomic, strong) UIColor * _Nonnull scheduleAlertColor;
@property (nonatomic, strong) UIFont * _Nonnull scheduleAlertFont;
@property (nonatomic, strong) UIColor * _Nonnull scheduleIconBackgroundColor;
@property (nonatomic, strong) UIImage * _Nullable scrollToBottomImage;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeColor;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeTextColor;
@property (nonatomic) BOOL incomingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingTimeColor;
@property (nonatomic) BOOL showIncomingAvatar;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingMediaTimeColor;
@property (nonatomic) CGFloat commonMessageAvatarSize;
@property (nonatomic) CGFloat systemMessageAvatarSize;
@property (nonatomic) BOOL failedBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull failedBubbleColor;
@property (nonatomic) BOOL outgoingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingReadStatusColor;
@property (nonatomic, strong) UIImage * _Nullable outgoingPendingStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingDeliveredStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingReadStatusImage;
@property (nonatomic) BOOL showOutgoingAvatar;
@property (nonatomic, strong) UIImage * _Nullable avatarPlaceholderImage;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaReadStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull searchScopeBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull searchScopeBarFont;
@property (nonatomic, strong) UIFont * _Nonnull searchBarTextFont;
@property (nonatomic) BOOL searchIconDisabled;
@property (nonatomic, strong) UIImage * _Nullable clearSearchIcon;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull findedMessageHeaderTextFont;
@property (nonatomic, strong) UIColor * _Nonnull findMoreMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull findMoreMessageTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageAuthorTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageDateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageFileTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageMatchTextColor;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageAuthorTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageMatchTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageFileTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageDateTextFont;
@property (nonatomic) BOOL photoPickerSelfieEnabled;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerToolbarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerToolbarButtonFont;
@property (nonatomic, strong) UIImage * _Nullable photoPickerCheckmarkIcon;
@property (nonatomic, strong) UIImage * _Nullable photoPickerEmptyCheckmarkIcon;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerSheetTextFont;
@property (nonatomic, strong) UIColor * _Nullable fileViewerTitleColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull fileViewerBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull fileViewerTitleFont;
@property (nonatomic) BOOL canShowSpecialistInfo;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelOnStarColor;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelUnderStarColor;
@property (nonatomic, strong) UIColor * _Nonnull surveyTextColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyTextFont;
@property (nonatomic, strong) UIColor * _Nonnull surveyCompletionColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyCompletionFont;
@property (nonatomic) NSInteger surveyCompletionDelay;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingEmty;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingFull;
@property (nonatomic, strong) UIImage * _Nullable iconLikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconLikeFull;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeFull;
@property (nonatomic) enum THRQuickReplyPresentationMode quickReplyPresentationMode;
/// < Шрифт для кнопок быстрых ответов
@property (nonatomic, strong) UIFont * _Nonnull quickReplyFont;
/// < Радиус закругления кнопок быстрых ответов
@property (nonatomic, strong) NSNumber * _Nonnull quickReplyBorderCornerRadius;
/// < Цвет границы кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBorderColor;
/// < Цвет кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColor;
/// < Цвет текста на кнопках быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColor;
/// <  Цвет подсветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColorHighlighted;
/// < Цвет подстветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColorHighLighted;
/// < Высота кнопки быстрого ответа (в режиме embed)
@property (nonatomic) CGFloat quickReplyButtonHeight;
/// < Толщина границы кнопки быстрого ответа
@property (nonatomic) CGFloat quickReplyBorderWidth;
@property (nonatomic) BOOL voiceRecordingAllowed;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageRecordButtonImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageSendButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull voiceMessageRecordSendButtonColor;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePlayImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePauseImage;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageProgressColor;
@property (nonatomic) BOOL showCloseButton;
@property (nonatomic, strong) UIColor * _Nullable closeButtonColor;
@property (nonatomic, strong) UIImage * _Nullable closeButtonImage;
@property (nonatomic) BOOL newChatCenterApi;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHTTPHeadersForDataStore;
@property (nonatomic, strong) NSNumber * _Nonnull historyLoadingCount;
/// pragma mark - Access call didReceiveResponse in delegate
@property (nonatomic) BOOL callReceiveResponseEnabled;
@property (nonatomic) BOOL clearChatHistoryIfSocketReconnect;
@property (nonatomic) BOOL allowUntrustedSSLCertificate;
@property (nonatomic, copy) NSArray<THRCert *> * _Nonnull trustedCertificates;
@property (nonatomic) NSUInteger photoPickerMaxImagesCount;
+ (THRAttributes * _Nonnull)defaultAttributes SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURL;

SWIFT_CLASS_NAMED("THRCert")
@interface THRCert : NSObject
/// Initialization certificate if it is in any place, main bundle or other bundles
/// \param url URL for certificate’s file
///
- (nonnull instancetype)initWithContentsOf:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
/// Initialization certificate if it is in main bundle
/// \param fileName String with name of file
///
- (nonnull instancetype)initWithContentsOfFile:(NSString * _Nonnull)fileName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads13THRClientInfo")
@interface THRClientInfo : NSObject
- (nonnull instancetype)initWithClientId:(NSString * _Nonnull)clientId OBJC_DESIGNATED_INITIALIZER;
/// Client configuration
/// @param id Unique client identifier, required parameter. For example, you can use the user’s phone number.
/// @param name Name of user
/// @param data custom data, json key-value pairs string
/// @param appMarker hreads support connecting multiple apps to a single server. Configure the appMarker identifier on the server and in app. As appMarker can be any unique string. appMarker should be the same for corresponding Android and iOS applications.
/// @param signature The clientId authorization signature, the signature should be generated on your server based on the clientId using the RSA private key, then encrypted in Base64. Under the general scheme of work with the signature, see the documentation for Threads-API.
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable appMarker;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable authToken;
@property (nonatomic, copy) NSString * _Nullable authSchema;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum THRSysColor : NSInteger;

SWIFT_CLASS("_TtC7Threads8THRColor")
@interface THRColor : NSObject
+ (UIColor * _Nonnull)colorBy:(NSString * _Nonnull)name colorType:(enum THRSysColor)colorType SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorBy:(NSString * _Nonnull)name defColor:(UIColor * _Nonnull)defColor SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorBy:(enum THRSysColor)sysColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads11THRControls")
@interface THRControls : NSObject
@property (nonatomic, strong) UIButton * _Nullable sendButton;
@property (nonatomic, strong) UIButton * _Nullable attachButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>JSQMessageAvatarImageDataSource</code> protocol defines the common interface through which
/// a <code>JSQMessagesViewController</code> and <code>JSQMessagesCollectionView</code> interact with avatar image model objects.
/// It declares the required and optional methods that a class must implement so that instances
/// of that class can be display properly within a <code>JSQMessagesCollectionViewCell</code>.
/// A concrete class that conforms to this protocol is provided in the library. See <code>JSQMessagesAvatarImage</code>.
/// seealso:
/// JSQMessagesAvatarImage.
SWIFT_PROTOCOL("_TtP7Threads34THRJSQMessageAvatarImageDataSource_")
@protocol THRJSQMessageAvatarImageDataSource <NSObject>
/// remark:
/// You may return <code>nil</code> from this method while the image is being downloaded.
///
/// returns:
/// The avatar image for a regular display state.
@property (nonatomic, strong) UIImage * _Nullable avatarImage;
/// remark:
/// You may return <code>nil</code> from this method if this does not apply.
///
/// returns:
/// The avatar image for a highlighted display state.
@property (nonatomic, strong) UIImage * _Nullable avatarHighlightedImage;
/// remark:
/// If you do not need support for a placeholder image, that is, your images
/// are stored locally on the device, then you may simply return the same value as avatarImage here.
/// @warning You must not return <code>nil</code> from this method.
///
/// returns:
/// A placeholder avatar image to be displayed if avatarImage is not yet available, or <code>nil</code>.
/// For example, if avatarImage needs to be downloaded, this placeholder image
/// will be used until avatarImage is not <code>nil</code>.
@property (nonatomic, readonly, strong) UIImage * _Nonnull avatarPlaceholderImage;
@end


SWIFT_CLASS("_TtC7Threads14THRMessageInfo")
@interface THRMessageInfo : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nullable)text senderName:(NSString * _Nonnull)senderName hasAttachment:(BOOL)hasAttachment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, THRMessageRecieveState, open) {
  THRMessageRecieveStateAccepted = 0,
  THRMessageRecieveStateNotAccepted = 1,
};

typedef SWIFT_ENUM_NAMED(NSInteger, THRMessageRecieveStateOld, "THRMessageRecieveStateOld", open) {
  THRMessageRecieveStateOldAccepted = 0,
  THRMessageRecieveStateOldNotAccepted = 1,
};

/// Режимы отображения быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyPresentationMode, open) {
/// < Показ кнопок быстрых ответов в всплывающей панели
  THRQuickReplyPresentationModeToolbar = 0,
/// < Показ кнопок быстрых ответов в потоке сообщений
  THRQuickReplyPresentationModeEmbed = 1,
};


SWIFT_CLASS("_TtC7Threads17THRRequestConfigs")
@interface THRRequestConfigs : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) SocketSettings * _Nonnull socket;
@property (nonatomic, strong) HttpSettings * _Nonnull http;
@end


SWIFT_CLASS("_TtC7Threads16THRRoutingParams")
@interface THRRoutingParams : NSObject
- (nonnull instancetype)initWithPriority:(NSInteger)priority skillId:(NSInteger)skillId expiredAt:(NSString * _Nullable)expiredAt OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, THRSysColor, open) {
  THRSysColorDarkGreen = 0,
  THRSysColorLightGreen = 1,
  THRSysColorGray = 2,
  THRSysColorLightGray = 3,
  THRSysColorMiddleGray = 4,
  THRSysColorDarkGray = 5,
  THRSysColorDarkerGray = 6,
  THRSysColorBlackTransparent50 = 7,
  THRSysColorLightCyan = 8,
  THRSysColorBlue = 9,
  THRSysColorRed = 10,
  THRSysColorOrange = 11,
  THRSysColorDarkOrange = 12,
  THRSysColorGold = 13,
  THRSysColorLabel = 14,
  THRSysColorSecondaryLabel = 15,
  THRSysColorTertiaryLabel = 16,
  THRSysColorQuaternaryLabel = 17,
  THRSysColorSystemFill = 18,
  THRSysColorSecondarySystemFill = 19,
  THRSysColorTertiarySystemFill = 20,
  THRSysColorQuaternarySystemFill = 21,
  THRSysColorPlaceholderText = 22,
  THRSysColorSystemBackground = 23,
  THRSysColorSecondarySystemBackground = 24,
  THRSysColorTertiarySystemBackground = 25,
  THRSysColorSystemGroupedBackground = 26,
  THRSysColorSecondarySystemGroupedBackground = 27,
  THRSysColorTertiarySystemGroupedBackground = 28,
  THRSysColorSeparator = 29,
  THRSysColorOpaqueSeparator = 30,
  THRSysColorLink = 31,
  THRSysColorDarkText = 32,
  THRSysColorLightText = 33,
  THRSysColorSystemBlue = 34,
  THRSysColorSystemGreen = 35,
  THRSysColorSystemIndigo = 36,
  THRSysColorSystemOrange = 37,
  THRSysColorSystemPink = 38,
  THRSysColorSystemPurple = 39,
  THRSysColorSystemRed = 40,
  THRSysColorSystemTeal = 41,
  THRSysColorSystemYellow = 42,
  THRSysColorSystemGray = 43,
  THRSysColorSystemGray2 = 44,
  THRSysColorSystemGray3 = 45,
  THRSysColorSystemGray4 = 46,
  THRSysColorSystemGray5 = 47,
  THRSysColorSystemGray6 = 48,
};

@protocol ThreadsDelegate;
@class NSData;
@class UIViewController;

SWIFT_CLASS("_TtC7Threads7Threads")
@interface Threads : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic) BOOL isClientIdEncrypted;
@property (nonatomic) BOOL isDebugLoggingEnabled;
@property (nonatomic) BOOL isSocketAdditionalDebugLoggingEnabled;
@property (nonatomic) BOOL registrationAtStartupDisable;
@property (nonatomic) BOOL isShowsNetworkActivity;
@property (nonatomic, readonly, copy) NSString * _Nullable clientId;
@property (nonatomic, readonly, copy) NSString * _Nullable clientName;
@property (nonatomic, readonly, copy) NSString * _Nullable appMarker;
@property (nonatomic, readonly, copy) NSString * _Nullable clientSignature;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthToken;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthSchema;
@property (nonatomic, readonly) BOOL isClientSet;
@property (nonatomic, readonly, copy) NSString * _Nullable data;
@property (nonatomic, readonly) NSInteger fileSizeLimit;
@property (nonatomic, readonly, strong) THRAttributes * _Nonnull attributes;
@property (nonatomic, readonly, strong) THRControls * _Nonnull controls;
@property (nonatomic, copy) NSURL * _Nullable restURL;
@property (nonatomic, copy) NSURL * _Nullable dataStoreURL;
@property (nonatomic, readonly) NSTimeInterval lastActivitySeconds;
+ (Threads * _Nonnull)threads SWIFT_WARN_UNUSED_RESULT;
- (void)configureTransportProtocolWith:(id <ThreadsDelegate> _Nullable)delegate webSocketURL:(NSURL * _Nonnull)webSocketURL providerUid:(NSString * _Nonnull)providerUid restURL:(NSURL * _Nonnull)restURL dataStoreURL:(NSURL * _Nonnull)dataStoreURL;
- (void)registerApplicationForRemoteNotificationsStandartOptionsWithAuthorizationStatusDenied:(void (^ _Nullable)(void))authorizationStatusDenied completionHandler:(void (^ _Nonnull)(NSData * _Nullable))completionHandler;
- (void)applicationDidRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)applicationDidFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)applicationDidReceiveRemoteNotification:(NSDictionary * _Nonnull)withUserInfo;
- (void)applicationDidReceiveRemoteNotification:(NSDictionary * _Nonnull)withUserInfo fetchCompletionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(enum THRMessageRecieveState))_;
- (void)updateLocationWithLatitude:(NSNumber * _Nonnull)latitude longtitude:(NSNumber * _Nonnull)longtitude;
- (void)setClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)logout;
- (void)logoutWithClientId:(NSString * _Nonnull)clientId;
- (void)handlePushNotificationUserInfo:(NSDictionary * _Nonnull)userInfo;
- (NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
- (NSUInteger)unreadMessagesCount SWIFT_WARN_UNUSED_RESULT;
- (void)clearCachedFiles;
- (BOOL)isThreadsOriginPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAppMarkerFromPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)sendMessageWithText:(NSString * _Nonnull)withText completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)registerUserWith:(THRClientInfo * _Nonnull)clientInfo messageWithText:(NSString * _Nonnull)text;
- (void)sendMessageWith:(UIImage * _Nonnull)image completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes pushUserInfo:(NSDictionary * _Nonnull)pushUserInfo completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol ThreadsPreloadView;

SWIFT_PROTOCOL("_TtP7Threads15ThreadsDelegate_")
@protocol ThreadsDelegate
- (void)threads:(Threads * _Nonnull)threads didReceiveError:(NSError * _Nonnull)error;
- (void)threads:(Threads * _Nonnull)threads unreadMessagesCount:(NSUInteger)unreadMessagesCount;
- (void)threads:(Threads * _Nonnull)threads didChangeDeviceAddress:(NSString * _Nonnull)deviceAddress;
@optional
- (BOOL)threads:(Threads * _Nonnull)threads allowOpenUrl:(NSURL * _Nonnull)allowOpenUrl SWIFT_WARN_UNUSED_RESULT;
- (id <ThreadsPreloadView> _Null_unspecified)customPreloadView SWIFT_WARN_UNUSED_RESULT;
@end

@class UIView;

SWIFT_PROTOCOL("_TtP7Threads18ThreadsPreloadView_")
@protocol ThreadsPreloadView
- (void)startAnimation;
- (void)stopAnimation;
- (UIView * _Null_unspecified)getView SWIFT_WARN_UNUSED_RESULT;
@end









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
